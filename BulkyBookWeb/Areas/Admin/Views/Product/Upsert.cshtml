@model ProductVM     //As there is NO model passed from Controller to View(), we can bind whatever model we want here inside View()
							<!-- How does it know what is Category: becaue of _ViewImports.cshtml -->

<form method="post" enctype="multipart/form-data">		<!-- enctype="multipart/form-data": to include others such as File/ Email... -->
	<div class="border p-3 my-5">
		<div class="row pb-2">
			<h2 class="text-primary"> @(Model.Product.Id!=0 ? "Update" : "Create") Product</h2>
			<hr />
		</div>
		
		<div asp-validation-summary="All"></div>
		
		<input asp-for="Product.Id" hidden />			<!-- to make Form Data contain 'Id' when passed to POST method-->
		<div class="mb-3">
			<label asp-for="Product.Title"></label>		<!-- will bind the Prop of 'Product' model using 'asp-for' -->
			<input asp-for="Product.Title" class="form-control" />
			<span asp-validation-for="Product.Title" class="text-danger"></span>		<!-- 'asp-validation-for': to show validation error on frontend -->
		</div>
		<div class="mb-3">
			<label asp-for="Product.Author"></label>		<!-- will bind the Prop NAME of 'Category' model using 'asp-for' -->
			<input asp-for="Product.Author" class="form-control" />  <!-- will bind the Prop VALUE of 'Category' model using 'asp-for' -->
			<span asp-validation-for="Product.Author" class="text-danger"></span>
		</div>
		<div class="mb-3">
			<label asp-for="Product.Description"></label>	
			<textarea asp-for="Product.Description" class="form-control"></textarea>
		</div>
		<div class="mb-3">
			<label asp-for="Product.ISBN"></label>		
			<input asp-for="Product.ISBN" class="form-control" /> 
			<span asp-validation-for="Product.ISBN" class="text-danger"></span>
		</div>
		<div class="mb-3">
			<label asp-for="Product.ListPrice"></label>		
			<input asp-for="Product.ListPrice" class="form-control" /> 
			<span asp-validation-for="Product.ListPrice" class="text-danger"></span>
		</div>
		<div class="mb-3">
			<label asp-for="Product.Price"></label>		
			<input asp-for="Product.Price" class="form-control" /> 
			<span asp-validation-for="Product.Price" class="text-danger"></span>
		</div>
		<div class="mb-3">
			<label asp-for="Product.Price50"></label>		
			<input asp-for="Product.Price50" class="form-control" /> 
			<span asp-validation-for="Product.Price50" class="text-danger"></span>
		</div>
		<div class="mb-3">
			<label asp-for="Product.Price100"></label>		
			<input asp-for="Product.Price100" class="form-control" /> 
			<span asp-validation-for="Product.Price100" class="text-danger"></span>
		</div>
		<div class="mb-3">
			<label asp-for="Product.CategoryId">Category</label>	
			<!-- asp-items and use Model( ~ProductVM). to pass extra stuff to View -->
			<select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select"> 
				<option disabled selected>--Select Category--</option>
			</select>
			<span asp-validation-for="Product.CategoryId" class="text-danger"></span>
		</div>
		<div class="mb-3">
			<label asp-for="Product.ImageUrl"></label>		
			<input type="file" class="form-control" />		<!-- type="file" -->
		</div>
		@if (Model.Product.Id!=0) 
		{
			<button type="submit" class="btn btn-primary" style="width:150px">Update</button>
		}
		else
		{
			<button type="submit" class="btn btn-primary" style="width:150px">Create</button>
		}
		<a asp-controller="Product" asp-action="Index" class="btn btn-secondary" style="width:150px">
			Back to List
		</a>
		
	</div>
</form>

<!-- Because _ValidationScriptsPartial.cshtml includes 'script' so need to add it inside 'Scripts' section -->
@section Scripts {
	@{
		<partial name="_ValidationScriptsPartial" />
	}
}


